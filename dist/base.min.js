"use strict";angular.module("angularBase",[]),angular.module("angularBase").provider("$angularBaseConfig",[function(){this.$get=function(){return this},this.config=function(r){for(var e in r)this[e]=r[e]}}]),angular.module("angularBase").service("Base",["$rootScope","$http","$q","$angularBaseConfig",function(r,e,t,i){function s(){if(this.config=i,this.errors={"ctrl-defined":"If your class extends the base service is must have this.ctrl defined","id-defined":"id must be defined","key-value-defined":"where must be defined","fill-first":"You must call fill on this object","fill-defined":"_fill must be defined","fill-type-object":"_fill must be of type 'object'","method-defined":"'method' must be defined","url-defined":"'url' must be defined","q-defined":"'q' must be defined",$angularBaseConfigProvider_error:"$angularBaseConfigProvider.api & $angularBaseConfigProvider.cache are not set"},!this.config||!this.config.api||"undefined"==typeof this.config.cache)throw new Error(this.errors.$angularBaseConfigProvider_error);this.setConfig=function(r){this.config=r},this.all=function(){if(!this.ctrl)throw new Error(this.errors["ctrl-defined"]);return this.request("GET",null,this.config.api+this.ctrl,null,t.defer())},this.get=function(r){if(!r)throw new Error(this.errors["id-defined"]);if(!this.ctrl)throw new Error(this.errors["ctrl-defined"]);return this.request("GET",null,this.config.api+this.ctrl+r,null,t.defer())},this.where=function(r){if(!r)throw new Error(this.errors["key-value-defined"]);if(!this.ctrl)throw new Error(this.errors["ctrl-defined"]);return this.request("GET",null,this.config.api+this.ctrl+"?where="+angular.toJson(r),null,t.defer())},this.fill=function(r){if(!r)throw new Error(this.errors["fill-defined"]);if("object"!=typeof r)throw new Error(this.errors["fill-type-object"]);this.data=r},this.create=function(){if(!this.data)throw new Error(this.errors["fill-first"]);if(!this.ctrl)throw new Error(this.errors["ctrl-defined"]);return this.request("POST",null,this.config.api+this.ctrl,this.data,t.defer())},this.update=function(r){if(!this.data)throw new Error(this.errors["fill-first"]);if(!this.ctrl)throw new Error(this.errors["ctrl-defined"]);if(!r)throw new Error(this.errors["id-defined"]);return this.request("PUT",null,this.config.api+this.ctrl+r,this.data,t.defer())},this["delete"]=function(r){if(!r)throw new Error(this.errors["id-defined"]);if(!this.ctrl)throw new Error(this.errors["ctrl-defined"]);return this.request("DELETE",null,this.config.api+this.ctrl+r,null,t.defer())},this.request=function(r,t,i,s,n){if(!r||"POST"!=r&&"GET"!=r&&"PUT"!=r&&"DELETE"!=r)throw new Error(this.errors["method-defined"]);if(!i)throw new Error(this.errors["url-defined"]);if(!n||!n.promise)throw new Error(this.errors["q-defined"]);return e({method:r,url:i,data:s,header:t?t:"{Content-Type: application/json}",cache:this.config.cache}).success(function(r,e,t){var i={};i.data=r,i.headers=t,i.status=e,n.resolve(i)}).error(function(r,e,t){var i={};i.data=r,i.headers=t,i.status=e,n.resolve(i)}),n.promise}}return s}]);